# resources (GUI layout)
econf_res = gnome.compile_resources(
    'ecres', 'resources.xml',
    source_dir: 'data',
    c_name: 'econf'
)

conf_data = configuration_data()
conf_data.set('DATA_DIR', join_paths(datadir, 'wstroke'))
configure_file(input: 'config.h.in',
               output: 'config.h',
               install: false,
               configuration: conf_data)

# note: this is code generated by Vala, compile it separately to
# silence warnings
cellib = static_library('cellib', 'cellrenderertextish.c',
		dependencies: [glib, gobject, gtk, input_inhibitor_dep],
		c_args: ['-w'])

wconf_sources = ['main.cc', 'actiondb_config.cc', 'actiondb.cc', 'actions.cc',
                 'appchooser.cc', 'gesture.cc', 'stroke_draw.cc', 'stroke.c',
                 'convert_keycodes.cc', 'stroke_drawing_area.cpp', econf_res]
wconf = executable('wstroke-config', wconf_sources,
        dependencies: [gtkmm, gdkmm, boost, protos, input_inhibitor_dep, toplevel_grabber_dep],
        install: true,
        cpp_args: ['-DACTIONDB_CONVERT_CODES', '-DWLR_USE_UNSTABLE'],
        link_with: cellib)


wslib_sources = ['easystroke_gestures.cpp', 'input_events.cpp', 'actiondb.cc', 'actiondb_plugin.cc', 'gesture.cc', 'stroke.c']
wslib = shared_module('wstroke', wslib_sources,
    dependencies: [wayfire, wlroots, wlserver, boost, glibmm, json],
    install: true,
    install_dir: wayfire.get_variable(pkgconfig: 'plugindir'),
    cpp_args: ['-Wno-unused-parameter', '-Wno-format-security','-DWAYFIRE_PLUGIN', '-DWLR_USE_UNSTABLE'],
    link_args: '-rdynamic')
    
